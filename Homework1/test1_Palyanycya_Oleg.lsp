(defun get-number-of-elem(elem arr &optional (pos 1))
	(if (eq arr nil)
		(progn nil)
		(if (eq (car arr) elem)
			(progn pos)
			(get-number-of-elem elem (cdr arr) (+ pos 1))
		)
	)
)

(defun stick (list1 list2) 
	(if (eq list1 nil)
		(progn list2)
		(stick (cdr list1) (cons (car list1) list2))
	)
)

(defun delete-elem (arr pos &optional(tmplist nil))
	(if (< pos 1)
		(progn arr)
		(if (not (= pos 1))
			(delete-elem (cdr arr) (- pos 1) (cons (car arr) tmplist))
			(stick tmplist (cdr arr))
		)
	)
)

(defun delete-elems(elem arr)
	(if (not(eq (get-number-of-elem elem arr 1) nil))
		(delete-elems elem (delete-elem arr (get-number-of-elem elem arr 1) nil))
		(progn arr)
	)
)

(defun remove-elems (list1 list2)
	(if (eq list1 nil)
		(progn list2)
		(remove-elems (cdr list1) (delete-elems (car list1) list2))
	)
)